<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UTA_AssemblyCleanupMethodWasUnsuccesful" xml:space="preserve">
    <value>어셈블리 정리 메서드 {0}.{1}이(가) 실패했습니다. 오류 메시지: {2}. StackTrace: {3}</value>
  </data>
  <data name="CouldNotInspectTypeDuringDiscovery1" xml:space="preserve">
    <value>MSTestAdapter가 어셈블리 '{1}'의 클래스 '{0}'에서 테스트를 검색하지 못했습니다. 이유는 {2}입니다.</value>
  </data>
  <data name="Common_CannotBeNullOrEmpty" xml:space="preserve">
    <value>매개 변수는 null이거나 비워 둘 수 없습니다.</value>
  </data>
  <data name="Execution_Test_Cancelled" xml:space="preserve">
    <value>테스트 '{0}' 실행이 중단되었습니다.</value>
  </data>
  <data name="DiscoveryWarning" xml:space="preserve">
    <value>[MSTest][검색][{0}] {1}</value>
  </data>
  <data name="InvalidSettingsXmlElement" xml:space="preserve">
    <value>'{0}' 설정이 잘못되었습니다. 예기치 않은 XmlElement '{1}'이(가) 있습니다.</value>
  </data>
  <data name="TestContextMessageBanner" xml:space="preserve">
    <value>TestContext 메시지:</value>
  </data>
  <data name="UTA_TestInitializeAndCleanupMethodHasWrongSignature" xml:space="preserve">
    <value>{0}.{1} 메서드의 서명이 잘못되었습니다. 메서드는 정적이 아니고 공용이어야 하며, 값을 반환하거나 매개 변수를 사용할 수 없습니다. 또한 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 Task여야 합니다.</value>
  </data>
  <data name="UTA_ClassOrAssemblyInitializeMethodHasWrongSignature" xml:space="preserve">
    <value>{0}.{1} 메서드의 서명이 잘못되었습니다. 메서드는 정적이고 공용이어야 하며, 값을 반환하지 않고 TestContext 형식의 매개 변수 한 개를 사용해야 합니다. 또한 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 Task여야 합니다.</value>
  </data>
  <data name="InvalidSettingsXmlAttribute" xml:space="preserve">
    <value>'{0}' 설정이 잘못되었습니다. 예기치 않은 XmlAttribute '{1}'이(가) 있습니다.</value>
  </data>
  <data name="UTA_ErrorMultiAssemblyInit" xml:space="preserve">
    <value>UTA013: {0}: 어셈블리 내부에서 AssemblyInitialize 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</value>
  </data>
  <data name="UTA_ErrorMultiClassInit" xml:space="preserve">
    <value>UTA025: {0}: 클래스 내부에서 ClassInitialize 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</value>
  </data>
  <data name="UTA_ExpectedExceptionAttributeConstructionException" xml:space="preserve">
    <value>테스트 메서드 {0}.{1}에 정의된 ExpectedException 특성이 생성하는 동안 예외를 throw했습니다.
{2}</value>
  </data>
  <data name="UTA_ErrorPredefinedTestProperty" xml:space="preserve">
    <value>UTA023: {0}: {1} 메서드에서 미리 정의된 속성 {2}을(를) 정의할 수 없습니다.</value>
  </data>
  <data name="UTA_InitMethodThrows" xml:space="preserve">
    <value>초기화 메서드 {0}.{1}에서 예외를 throw했습니다. {2}.</value>
  </data>
  <data name="TestNotFound" xml:space="preserve">
    <value>{0} 테스트 메서드를 찾을 수 없습니다.</value>
  </data>
  <data name="Execution_Test_Timeout" xml:space="preserve">
    <value>'{0}' 테스트가 실행 시간 제한을 초과했습니다.</value>
  </data>
  <data name="UTA_ErrorMultiInit" xml:space="preserve">
    <value>UTA018: {0}: TestInitialize 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</value>
  </data>
  <data name="TestAssembly_AssemblyDiscoveryFailure" xml:space="preserve">
    <value>어셈블리 {0}에서 테스트를 검색하지 못했습니다. 이유:{1}</value>
  </data>
  <data name="UTA_ErrorNonPublicTestClass" xml:space="preserve">
    <value>UTA001: public이 아닌 클래스 {0}에서 TestClass 특성을 정의했습니다.</value>
  </data>
  <data name="UTA_ErrorIncorrectTestMethodSignature" xml:space="preserve">
    <value>UTA007: {0} 클래스에 정의된 {1} 메서드의 서명이 잘못되었습니다. [TestMethod] 특성으로 표시된 테스트 메서드는 static이 아니고 public이어야 하며, 반환 형식이 void여야 하고 매개 변수를 사용할 수 없습니다. 예: public void Test.Class1.Test(). 또한 테스트 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 Task여야 합니다. 예: public async Task Test.Class1.Test2()</value>
  </data>
  <data name="UTA_ErrorTestPropertyNullOrEmpty" xml:space="preserve">
    <value>UTA021: {0}: {1} 메서드에서 Null 또는 빈 사용자 지정 속성을 정의했습니다. 사용자 지정 속성에는 올바른 이름이 지정되어 있어야 합니다.</value>
  </data>
  <data name="UTA_NoTestResult" xml:space="preserve">
    <value>테스트를 실행하는 중에 오류가 발생했습니다. 확장에서 결과가 반환되지 않았습니다. TestMethodAttribute 확장을 사용하는 경우 공급업체에 문의하세요.</value>
  </data>
  <data name="UTA_ClassCleanupMethodWasUnsuccesful" xml:space="preserve">
    <value>클래스 정리 메서드 {0}.{1}이(가) 실패했습니다. 오류 메시지: {2}. 스택 추적: {3}</value>
  </data>
  <data name="UTA_ErrorTestPropertyAlreadyDefined" xml:space="preserve">
    <value>UTA022: {0}.{1}: 사용자 지정 속성 "{2}"은(는) 이미 정의되어 있습니다. 값으로 "{3}"을(를) 사용합니다.</value>
  </data>
  <data name="SourcesNotSupported" xml:space="preserve">
    <value>선택된 플랫폼의 경우 제공된 소스에서 테스트를 실행할 수 없습니다.</value>
  </data>
  <data name="UTA_ClassInitMethodThrows" xml:space="preserve">
    <value>클래스 초기화 메서드 {0}.{1}에서 예외를 throw했습니다. {2}: {3}</value>
  </data>
  <data name="TestContextIsNull" xml:space="preserve">
    <value>TestContext는 null일 수 없습니다.</value>
  </data>
  <data name="DataDrivenResultDisplayName" xml:space="preserve">
    <value>{0}(데이터 행 {1})</value>
  </data>
  <data name="UTA_WrongThread" xml:space="preserve">
    <value>{0} UWP 프로젝트의 경우 테스트에서 UI 개체를 사용 중이면 [TestMethod] 대신 [UITestMethod] 특성을 사용하여 UI 스레드에서 테스트를 실행하세요.</value>
  </data>
  <data name="UTA_ExecuteThrewException" xml:space="preserve">
    <value>테스트를 실행하는 동안 예외가 발생했습니다. TestMethodAttribute 확장을 사용하는 경우 공급업체에 문의하세요. 오류 메시지: {0}</value>
  </data>
  <data name="UTA_TestMethodThrows" xml:space="preserve">
    <value>테스트 메서드 {0}.{1}에서 예외를 throw했습니다. 
{2}</value>
  </data>
  <data name="UTA_CleanupMethodThrows" xml:space="preserve">
    <value>TestCleanup 메서드 {0}.{1}에서 예외를 throw했습니다. {2}: {3}.</value>
  </data>
  <data name="UTA_InstanceCreationError" xml:space="preserve">
    <value>{0} 클래스의 인스턴스를 만들 수 없습니다. 오류: {1}</value>
  </data>
  <data name="TestParallelizationBanner" xml:space="preserve">
    <value>MSTest 실행기: {0}에 대해 테스트 병렬 처리를 사용합니다(Workers: {1}, Scope: {2}).</value>
  </data>
  <data name="UTA_TestContextTypeMismatchLoadError" xml:space="preserve">
    <value>{0}.TestContext의 형식이 잘못되었습니다.</value>
  </data>
  <data name="DebugTraceBanner" xml:space="preserve">
    <value>디버그 추적:</value>
  </data>
  <data name="UTA_ClassOrAssemblyCleanupMethodHasWrongSignature" xml:space="preserve">
    <value>{0}.{1} 메서드의 서명이 잘못되었습니다. 메서드는 정적이고 공용이어야 하며, 값을 반환하거나 매개 변수를 취하지 않습니다. 또한 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 Task여야 합니다.</value>
  </data>
  <data name="UTA_ErrorGenericTestMethod" xml:space="preserve">
    <value>UTA015: 제네릭 메서드는 테스트 메서드일 수 없습니다. {0}.{1}에 잘못된 서명이 있습니다.</value>
  </data>
  <data name="UTA_AssemblyInitMethodThrows" xml:space="preserve">
    <value>어셈블리 초기화 메서드 {0}.{1}에서 예외를 throw했습니다. {2}: {3}. 테스트 실행을 중단합니다.</value>
  </data>
  <data name="UTA_ErrorMultiClean" xml:space="preserve">
    <value>UTA024: {0}: TestCleanup 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</value>
  </data>
  <data name="InvalidParallelScopeValue" xml:space="preserve">
    <value>'Scope'에 대해 잘못된 값 '{0}'이(가) 지정되었습니다. 지원되는 범위는 {1}입니다.</value>
  </data>
  <data name="UTF_FailedToGetExceptionMessage" xml:space="preserve">
    <value>(예외로 인해 {0} 형식의 예외에 대한 메시지를 가져오지 못했습니다.)</value>
  </data>
  <data name="UTA_TestMethodExpectedParameters" xml:space="preserve">
    <value>데이터 기반 테스트 메서드에만 매개 변수를 포함할 수 있습니다. [DataRow] 또는 [DynamicData]를 사용하려고 하셨습니까?</value>
  </data>
  <data name="AttachmentSetDisplayName" xml:space="preserve">
    <value>MSTestAdapterV2</value>
  </data>
  <data name="CouldNotInspectTypeDuringDiscovery" xml:space="preserve">
    <value>MSTestAdapter가 {2} 때문에 어셈블리 '{1}'의 클래스 '{0}'에서 테스트를 검색하지 못했습니다.</value>
  </data>
  <data name="UTA_TestContextSetError" xml:space="preserve">
    <value>{0} 클래스에 대해 TestContext 속성을 설정할 수 없습니다. 오류: {1}</value>
  </data>
  <data name="UTA_ErrorMultiAssemblyClean" xml:space="preserve">
    <value>UTA014: {0}: 어셈블리 내부에서 AssemblyCleanup 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</value>
  </data>
  <data name="UTA_FailedToGetTestMethodException" xml:space="preserve">
    <value>테스트 메서드 {0}.{1}에서 throw한 예외를 가져오지 못했습니다.</value>
  </data>
  <data name="InvalidParallelWorkersValue" xml:space="preserve">
    <value>'Workers'에 대해 잘못된 값 '{0}'이(가) 지정되었습니다. 이 값은 음수가 아닌 정수여야 합니다.</value>
  </data>
  <data name="UTA_EndOfInnerExceptionTrace" xml:space="preserve">
    <value>--- 내부 예외 스택 추적의 끝 ---</value>
  </data>
  <data name="UTA_ErrorInvalidTimeout" xml:space="preserve">
    <value>UTA054: {0}.{1}에 잘못된 Timeout 특성이 있습니다. Timeout은 유효한 정수 값이어야 하며 0보다 작을 수 없습니다.</value>
  </data>
  <data name="LegacyScenariosNotSupportedWarning" xml:space="preserve">
    <value>경고: MSTest V2 어댑터에서는 testsettings 파일 또는 vsmdi 파일이 지원되지 않습니다.</value>
  </data>
  <data name="Common_MustBeGreaterThanZero" xml:space="preserve">
    <value>매개 변수는 0보다 커야 합니다.</value>
  </data>
  <data name="UTA_NoDefaultConstructor" xml:space="preserve">
    <value>{0} 클래스의 기본 생성자를 가져올 수 없습니다.</value>
  </data>
  <data name="UTA_TestContextLoadError" xml:space="preserve">
    <value>{0}.TestContext 속성을 찾을 수 없습니다. 오류: {1}</value>
  </data>
  <data name="EnumeratorLoadTypeErrorFormat" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="UTA_MultipleExpectedExceptionsOnTestMethod" xml:space="preserve">
    <value>테스트 메서드 {0}.{1}에는 정의되어 있는 ExpectedExceptionBaseAttribute에서 파생된 특성이 여러 개 있습니다. 이러한 특성은 하나만 허용됩니다.</value>
  </data>
  <data name="UTA_ErrorInValidTestContextSignature" xml:space="preserve">
    <value>UTA031: {0} 클래스에 올바른 TestContext 속성이 없습니다. TestContext는 TestContext 형식이어야 하고 읽기 전용이 아니어야 하며, static이 아니고 public이어야 합니다. 예: public TestContext TestContext.</value>
  </data>
  <data name="UTA_CleanupMethodThrowsGeneralError" xml:space="preserve">
    <value>테스트 클래스 {0}에 대한 테스트 정리 메서드를 호출하는 오류: {1}</value>
  </data>
  <data name="UTA_MethodDoesNotExists" xml:space="preserve">
    <value>{0}.{1} 메서드가 없습니다.</value>
  </data>
  <data name="TestAssembly_FileDoesNotExist" xml:space="preserve">
    <value>파일이 없습니다. {0}</value>
  </data>
  <data name="UTA_CleanupStackTrace" xml:space="preserve">
    <value>TestCleanup 스택 추적</value>
  </data>
  <data name="UTA_TypeLoadError" xml:space="preserve">
    <value>{0} 형식을 가져올 수 없습니다. 오류: {1}</value>
  </data>
  <data name="TypeLoadFailed" xml:space="preserve">
    <value>테스트 소스 '{0}'에서 형식을 로드할 수 없습니다. 이 소스의 일부 또는 모든 테스트를 검색할 수 없습니다.
오류: {1}</value>
  </data>
  <data name="UTA_ErrorMultiClassClean" xml:space="preserve">
    <value>UTA026: {0}: 클래스 내부에서 ClassCleanup 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</value>
  </data>
</root>