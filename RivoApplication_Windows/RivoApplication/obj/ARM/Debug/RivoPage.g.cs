#pragma checksum "C:\Users\Jason\riVo\Rivo-app-PC\RivoApplication_Windows\RivoApplication\RivoPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "D156C5D3F005D6804AF524D2C18E381CAB483E9632F7B60D1454111A1879594E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RivoApplication
{
    partial class RivoPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Documents_Run_Text(global::Windows.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class RivoPage_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IRivoPage_Bindings
        {
            private global::RivoApplication.BluetoothLEDeviceDisplay dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Documents.Run obj4;
            private global::Windows.UI.Xaml.Documents.Run obj5;
            private global::Windows.UI.Xaml.Documents.Run obj6;
            private global::Windows.UI.Xaml.Documents.Run obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;

            private RivoPage_obj3_BindingsTracking bindingsTracking;

            public RivoPage_obj3_Bindings()
            {
                this.bindingsTracking = new RivoPage_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 28 && columnNumber == 40)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 99)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 162)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 36)
                {
                    isobj7TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // RivoPage.xaml line 18
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 4: // RivoPage.xaml line 28
                        this.obj4 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 5: // RivoPage.xaml line 28
                        this.obj5 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 6: // RivoPage.xaml line 28
                        this.obj6 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 7: // RivoPage.xaml line 25
                        this.obj7 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::RivoApplication.BluetoothLEDeviceDisplay) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IRivoPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::RivoApplication.BluetoothLEDeviceDisplay)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::RivoApplication.BluetoothLEDeviceDisplay obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsPaired(obj.IsPaired, phase);
                        this.Update_IsConnected(obj.IsConnected, phase);
                        this.Update_IsConnectable(obj.IsConnectable, phase);
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_IsPaired(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 28
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj4, obj.ToString(), null);
                    }
                }
            }
            private void Update_IsConnected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 28
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj5, obj.ToString(), null);
                    }
                }
            }
            private void Update_IsConnectable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 28
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj6, obj.ToString(), null);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 25
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj7, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class RivoPage_obj3_BindingsTracking
            {
                private global::System.WeakReference<RivoPage_obj3_Bindings> weakRefToBindingObj; 

                public RivoPage_obj3_BindingsTracking(RivoPage_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<RivoPage_obj3_Bindings>(obj);
                }

                public RivoPage_obj3_Bindings TryGetBindingObject()
                {
                    RivoPage_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RivoPage_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::RivoApplication.BluetoothLEDeviceDisplay obj = sender as global::RivoApplication.BluetoothLEDeviceDisplay;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_IsPaired(obj.IsPaired, DATA_CHANGED);
                                bindings.Update_IsConnected(obj.IsConnected, DATA_CHANGED);
                                bindings.Update_IsConnectable(obj.IsConnectable, DATA_CHANGED);
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsPaired":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsPaired(obj.IsPaired, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsConnected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsConnected(obj.IsConnected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsConnectable":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsConnectable(obj.IsConnectable, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::RivoApplication.BluetoothLEDeviceDisplay obj)
                {
                    RivoPage_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class RivoPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IRivoPage_Bindings
        {
            private global::RivoApplication.RivoPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Button obj9;
            private global::Windows.UI.Xaml.Controls.Button obj10;
            private global::Windows.UI.Xaml.Controls.Button obj11;
            private global::Windows.UI.Xaml.Controls.ListView obj12;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj9Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj10Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj11Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj10IsEnabledDisabled = false;
            private static bool isobj12ItemsSourceDisabled = false;

            private RivoPage_obj1_BindingsTracking bindingsTracking;

            public RivoPage_obj1_Bindings()
            {
                this.bindingsTracking = new RivoPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 37 && columnNumber == 135)
                {
                    this.obj9.Click -= obj9Click;
                }
                else if (lineNumber == 39 && columnNumber == 17)
                {
                    isobj10IsEnabledDisabled = true;
                }
                else if (lineNumber == 38 && columnNumber == 133)
                {
                    this.obj10.Click -= obj10Click;
                }
                else if (lineNumber == 40 && columnNumber == 141)
                {
                    this.obj11.Click -= obj11Click;
                }
                else if (lineNumber == 43 && columnNumber == 23)
                {
                    isobj12ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // RivoPage.xaml line 37
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj9Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.Search_Click();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj9Click;
                        break;
                    case 10: // RivoPage.xaml line 38
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj10Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.Pair_Click();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj10Click;
                        break;
                    case 11: // RivoPage.xaml line 40
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj11Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ConnectButton_Click(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj11Click;
                        break;
                    case 12: // RivoPage.xaml line 41
                        this.obj12 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IRivoPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::RivoApplication.RivoPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private bool TryGet_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(out global::System.Boolean val)
            {
                global::RivoApplication.BluetoothLEDeviceDisplay obj;
                if (TryGet_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(out obj) && obj != null)
                {
                    val = obj.IsPaired;
                    return true;
                }
                else
                {
                    val = default(global::System.Boolean);
                    return false;
                }
            }

            private bool TryGet_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(out global::RivoApplication.BluetoothLEDeviceDisplay val)
            {
                global::System.Object obj;
                if (TryGet_ResultsListView_SelectedItem(out obj) && obj != null)
                {
                    val = (global::RivoApplication.BluetoothLEDeviceDisplay)obj;
                    return true;
                }
                else
                {
                    val = default(global::RivoApplication.BluetoothLEDeviceDisplay);
                    return false;
                }
            }

            private bool TryGet_ResultsListView_SelectedItem(out global::System.Object val)
            {
                global::Windows.UI.Xaml.Controls.ListView obj;
                if (TryGet_ResultsListView(out obj) && obj != null)
                {
                    val = obj.SelectedItem;
                    return true;
                }
                else
                {
                    val = default(global::System.Object);
                    return false;
                }
            }

            private bool TryGet_ResultsListView(out global::Windows.UI.Xaml.Controls.ListView val)
            {
                global::RivoApplication.RivoPage obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.ResultsListView;
                    return true;
                }
                else
                {
                    val = default(global::Windows.UI.Xaml.Controls.ListView);
                    return false;
                }
            }

            private bool TryGet_(out global::RivoApplication.RivoPage val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_M_Not_223009809(int phase)
            {
                global::System.Boolean p0;
                if (!TryGet_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(out p0)) { return; }
                global::System.Boolean result = this.dataRoot.Not(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 38
                    if (!isobj10IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj10, result);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::RivoApplication.RivoPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ResultsListView(obj.ResultsListView, phase);
                        this.Update_M_Not_223009809(phase);
                        this.Update_KnownDevices(obj.KnownDevices, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_ResultsListView(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_M_Not_223009809(phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_ResultsListView(global::Windows.UI.Xaml.Controls.ListView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ResultsListView(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ResultsListView_SelectedItem(obj.SelectedItem, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_ResultsListView_SelectedItem(phase);
                    }
                }
            }
            private void Update_ResultsListView_SelectedItem(global::System.Object obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay((global::RivoApplication.BluetoothLEDeviceDisplay)obj, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(phase);
                    }
                }
            }
            private void Update_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(global::RivoApplication.BluetoothLEDeviceDisplay obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(obj.IsPaired, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(phase);
                    }
                }
            }
            private void Update_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(global::System.Boolean obj, int phase)
            {
                this.Update_M_Not_223009809(phase);
            }
            private void Update_M_Not_223009809(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj10IsEnabledDisabled)
                    {
                        this.PendingFunctionBindings["M_Not_223009809"] = new InvokeFunctionDelegate(this.Invoke_M_Not_223009809); 
                    }
                }
            }
            private void Update_KnownDevices(global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_KnownDevices(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 41
                    if (!isobj12ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj12, obj, null);
                    }
                }
            }

            private void UpdateFallback_ResultsListView(int phase)
            {
                this.UpdateFallback_ResultsListView_SelectedItem(phase);
            }

            private void UpdateFallback_ResultsListView_SelectedItem(int phase)
            {
                this.UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(phase);
            }

            private void UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(int phase)
            {
                this.UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(phase);
            }

            private void UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(int phase)
            {
                this.UpdateFallback_M_Not_223009809(phase);
            }

            private void UpdateFallback_M_Not_223009809(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // RivoPage.xaml line 38
                    if (!isobj10IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj10, (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), "False"));
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class RivoPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<RivoPage_obj1_Bindings> weakRefToBindingObj; 

                public RivoPage_obj1_BindingsTracking(RivoPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<RivoPage_obj1_Bindings>(obj);
                }

                public RivoPage_obj1_Bindings TryGetBindingObject()
                {
                    RivoPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ResultsListView(null);
                    UpdateChildListeners_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(null);
                    UpdateChildListeners_KnownDevices(null);
                }

                public void DependencyPropertyChanged_ResultsListView_SelectedItem(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    RivoPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.ListView obj = sender as global::Windows.UI.Xaml.Controls.ListView;
                        if (obj != null)
                        {
                            bindings.Update_ResultsListView_SelectedItem(obj.SelectedItem, DATA_CHANGED);
                        }
                        else
                        {
                            bindings.UpdateFallback_ResultsListView_SelectedItem(DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Windows.UI.Xaml.Controls.ListView cache_ResultsListView = null;
                private long tokenDPC_ResultsListView_SelectedItem = 0;
                public void UpdateChildListeners_ResultsListView(global::Windows.UI.Xaml.Controls.ListView obj)
                {
                    if (obj != cache_ResultsListView)
                    {
                        if (cache_ResultsListView != null)
                        {
                            cache_ResultsListView.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, tokenDPC_ResultsListView_SelectedItem);
                            cache_ResultsListView = null;
                        }
                        if (obj != null)
                        {
                            cache_ResultsListView = obj;
                            tokenDPC_ResultsListView_SelectedItem = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, DependencyPropertyChanged_ResultsListView_SelectedItem);
                        }
                    }
                }
                public void PropertyChanged_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RivoPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::RivoApplication.BluetoothLEDeviceDisplay obj = sender as global::RivoApplication.BluetoothLEDeviceDisplay;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(obj.IsPaired, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsPaired":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(obj.IsPaired, DATA_CHANGED);
                                    }
                                    else
                                    {
                                        bindings.UpdateFallback_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay_IsPaired(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::RivoApplication.BluetoothLEDeviceDisplay cache_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay = null;
                public void UpdateChildListeners_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay(global::RivoApplication.BluetoothLEDeviceDisplay obj)
                {
                    if (obj != cache_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay)
                    {
                        if (cache_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay).PropertyChanged -= PropertyChanged_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay;
                            cache_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay = null;
                        }
                        if (obj != null)
                        {
                            cache_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ResultsListView_SelectedItem_Cast_SelectedItem_To_BluetoothLEDeviceDisplay;
                        }
                    }
                }
                public void PropertyChanged_KnownDevices(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RivoPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void CollectionChanged_KnownDevices(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    RivoPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay>;
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay> cache_KnownDevices = null;
                public void UpdateChildListeners_KnownDevices(global::System.Collections.ObjectModel.ObservableCollection<global::RivoApplication.BluetoothLEDeviceDisplay> obj)
                {
                    if (obj != cache_KnownDevices)
                    {
                        if (cache_KnownDevices != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_KnownDevices).PropertyChanged -= PropertyChanged_KnownDevices;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_KnownDevices).CollectionChanged -= CollectionChanged_KnownDevices;
                            cache_KnownDevices = null;
                        }
                        if (obj != null)
                        {
                            cache_KnownDevices = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_KnownDevices;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_KnownDevices;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 8: // RivoPage.xaml line 35
                {
                    this.Rivo3 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 9: // RivoPage.xaml line 37
                {
                    this.Search = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 10: // RivoPage.xaml line 38
                {
                    this.Pair = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 11: // RivoPage.xaml line 40
                {
                    this.ConnectButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 12: // RivoPage.xaml line 41
                {
                    this.ResultsListView = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 13: // RivoPage.xaml line 49
                {
                    this.SearchStatus = (global::Windows.UI.Xaml.Controls.ProgressRing)(target);
                }
                break;
            case 14: // RivoPage.xaml line 51
                {
                    this.SelectedDeviceRun = (global::Windows.UI.Xaml.Documents.Run)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // RivoPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    RivoPage_obj1_Bindings bindings = new RivoPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // RivoPage.xaml line 18
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element3 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    RivoPage_obj3_Bindings bindings = new RivoPage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

